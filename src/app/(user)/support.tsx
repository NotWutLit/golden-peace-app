import images from '@/constants/images'
import { ImageBackground, StatusBar, View, Text, TouchableOpacity, ScrollView, TextInput } from 'react-native'
import React, { useState } from 'react'
import { ArrowLeft2, ArrowDown2, Send } from 'iconsax-react-native'
import { useRouter } from 'expo-router'

interface FAQItem {
  id: string
  question: string
  answer: string
}

export default function Support() {
  const router = useRouter()
  const [expandedFAQ, setExpandedFAQ] = useState<string | null>(null)
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: '',
  })

  const faqData: FAQItem[] = [
    {
      id: '1',
      question: '·ª®ng d·ª•ng n√†y c√≥ th·ª±c s·ª± ph√π h·ª£p v·ªõi ng∆∞·ªùi l·ªõn tu·ªïi kh√¥ng?',
      answer: 'C√≥! ·ª®ng d·ª•ng ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát cho ng∆∞·ªùi cao tu·ªïi v·ªõi giao di·ªán th√¢n thi·ªán, ch·ªØ l·ªõn v√† d·ªÖ s·ª≠ d·ª•ng.',
    },
    {
      id: '2',
      question: 'N·∫øu t√¥i kh√¥ng bi·∫øt c√°ch s·ª≠ d·ª•ng, c√≥ ai h∆∞·ªõng d·∫´n kh√¥ng?',
      answer: 'Ch√∫ng t√¥i c√≥ h∆∞·ªõng d·∫´n chi ti·∫øt trong ·ª©ng d·ª•ng v√† ƒë·ªôi ng≈© h·ªó tr·ª£ s·∫µn s√†ng gi√∫p ƒë·ª° b·∫°n qua email ho·∫∑c ƒëi·ªán tho·∫°i.',
    },
    {
      id: '3',
      question: '·ª®ng d·ª•ng n√†y c√≥ thu ph√≠ kh√¥ng?',
      answer: '·ª®ng d·ª•ng ho√†n to√†n mi·ªÖn ph√≠ cho t·∫•t c·∫£ c√°c ch·ª©c nƒÉng c∆° b·∫£n.',
    },
    {
      id: '4',
      question: 'Th√¥ng tin c√° nh√¢n c·ªßa t√¥i c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t kh√¥ng?',
      answer: 'T·∫•t c·∫£ th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c m√£ h√≥a v√† b·∫£o m·∫≠t tuy·ªát ƒë·ªëi. Ch√∫ng t√¥i kh√¥ng chia s·∫ª v·ªõi b·∫•t k·ª≥ b√™n th·ª© ba n√†o.',
    },
  ]

  const toggleFAQ = (id: string) => {
    setExpandedFAQ(expandedFAQ === id ? null : id)
  }

  const handleSendSupport = () => {
    console.log('Send support request', formData)
    // Reset form
    setFormData({ name: '', email: '', message: '' })
  }

  return (
    <ImageBackground source={images.bgLibrary} className="flex-1">
      <StatusBar translucent backgroundColor={'transparent'} barStyle="light-content" />
      <View className="flex-1 px-4 mt-16">
        {/* Header */}
        <View className="flex-row items-center mb-6">
          <TouchableOpacity 
            className="items-center h-16 w-16 rounded-3xl justify-center bg-secondary-50" 
            onPress={() => router.back()}
          >
            <ArrowLeft2 size="24" color="#212B36" variant="Outline"/>
          </TouchableOpacity>
          <Text className="text-gray-800 text-2xl font-bold flex-1 text-center mr-16">
            H·ªó tr·ª£
          </Text>
        </View>

        <ScrollView 
          className="flex-1"
          showsVerticalScrollIndicator={false}
        >
          {/* Introduction */}
          <Text className="text-gray-700 text-base leading-6 mb-6">
            Ch√∫ng t√¥i lu√¥n s·∫µn l√≤ng tr·ª£ gi√∫p b·∫°n c√≥ tr·∫£i nghi·ªám t·ªët nh·∫•t! D∆∞·ªõi ƒë√¢y l√† c√°ch b·∫°n c√≥ th·ªÉ nh·∫≠n ƒë∆∞·ª£c h·ªó tr·ª£:
          </Text>

          {/* Section 1: FAQ */}
          <View className="mb-6">
            <Text className="text-gray-800 text-xl font-bold mb-4">
              1. C√¢u h·ªèi th∆∞·ªùng g·∫∑p
            </Text>
            
            <Text className="text-gray-700 text-base leading-6 mb-4">
              Tr∆∞·ªõc khi li√™n h·ªá v·ªõi ch√∫ng t√¥i, vui l√≤ng ki·ªÉm tra ph·∫ßn C√¢u h·ªèi th∆∞·ªùng g·∫∑p c·ªßa ch√∫ng t√¥i. B·∫°n c√≥ th·ªÉ t√¨m th·∫•y c√¢u tr·∫£ l·ªùi nhanh ch√≥ng cho c√°c v·∫•n ƒë·ªÅ ph·ªï bi·∫øn nh∆∞:
            </Text>

            {/* FAQ Accordion */}
            <View className="gap-3">
              {faqData.map((item) => (
                <View 
                  key={item.id}
                  className="bg-secondary-50 rounded-2xl overflow-hidden"
                  style={{
                    shadowColor: '#000',
                    shadowOffset: { width: 0, height: 1 },
                    shadowOpacity: 0.05,
                    shadowRadius: 3,
                    elevation: 2,
                  }}
                >
                  <TouchableOpacity
                    onPress={() => toggleFAQ(item.id)}
                    className="p-4 flex-row items-center justify-between"
                  >
                    <Text className="flex-1 text-gray-700 text-base leading-6 pr-3">
                      {item.question}
                    </Text>
                    <ArrowDown2 
                      size="20" 
                      color="#9CA3AF" 
                      variant="Outline"
                      style={{
                        transform: [{ rotate: expandedFAQ === item.id ? '180deg' : '0deg' }]
                      }}
                    />
                  </TouchableOpacity>
                  {expandedFAQ === item.id && (
                    <View className="px-4 pb-4">
                      <Text className="text-gray-600 text-base leading-6">
                        {item.answer}
                      </Text>
                    </View>
                  )}
                </View>
              ))}
            </View>
          </View>

          {/* Section 2: Send Support Request */}
          <View className="mb-6">
            <Text className="text-gray-800 text-xl font-bold mb-4">
              2. G·ª≠i y√™u c·∫ßu h·ªó tr·ª£
            </Text>
            
            <Text className="text-gray-700 text-base leading-6 mb-4">
              N·∫øu b·∫°n kh√¥ng t√¨m th·∫•y c√¢u tr·∫£ l·ªùi trong ph·∫ßn FAQ ho·∫∑c c·∫ßn h·ªó tr·ª£ c√° nh√¢n, b·∫°n c√≥ th·ªÉ g·ª≠i y√™u c·∫ßu h·ªó tr·ª£ cho ch√∫ng t√¥i.
            </Text>

            <View className="bg-green-50 rounded-2xl p-4 mb-4">
              <Text className="text-green-700 text-base font-semibold mb-2">
                üí° M·∫πo ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c h·ªó tr·ª£ nhanh nh·∫•t:
              </Text>
              <Text className="text-green-700 text-sm leading-5 mb-1">
                ‚Ä¢ M√¥ t·∫£ r√µ r√†ng: C√†ng c·ª• th·ªÉ v·ªÅ v·∫•n ƒë·ªÅ, ch√∫ng t√¥i c√†ng d·ªÖ d√†ng gi√∫p b·∫°n.
              </Text>
              <Text className="text-green-700 text-sm leading-5">
                ‚Ä¢ Th√¥ng tin thi·∫øt b·ªã: Lu√¥n cung c·∫•p th√¥ng tin v·ªÅ thi·∫øt b·ªã v√† h·ªá ƒëi·ªÅu h√†nh c·ªßa b·∫°n.
              </Text>
            </View>

            {/* Support Form */}
            <View className="gap-4">
              <View>
                <TextInput
                  placeholder="T√™n"
                  value={formData.name}
                  onChangeText={(text) => setFormData({ ...formData, name: text })}
                  className="bg-secondary-50 rounded-2xl px-4 py-4 text-gray-700 text-base"
                  placeholderTextColor="#9CA3AF"
                />
              </View>

              <View>
                <TextInput
                  placeholder="Email"
                  value={formData.email}
                  onChangeText={(text) => setFormData({ ...formData, email: text })}
                  keyboardType="email-address"
                  autoCapitalize="none"
                  className="bg-secondary-50 rounded-2xl px-4 py-4 text-gray-700 text-base"
                  placeholderTextColor="#9CA3AF"
                />
              </View>

              <View>
                <TextInput
                  placeholder="Tin nh·∫Øn"
                  value={formData.message}
                  onChangeText={(text) => setFormData({ ...formData, message: text })}
                  multiline
                  numberOfLines={4}
                  textAlignVertical="top"
                  className="bg-secondary-50 rounded-2xl px-4 py-4 text-gray-700 text-base h-32"
                  placeholderTextColor="#9CA3AF"
                />
              </View>

              <TouchableOpacity
                onPress={handleSendSupport}
                className="bg-gray-800 rounded-2xl p-4 flex-row items-center justify-center"
                style={{
                  shadowColor: '#000',
                  shadowOffset: { width: 0, height: 2 },
                  shadowOpacity: 0.1,
                  shadowRadius: 8,
                  elevation: 3,
                }}
              >
                <Send size="24" color="#FFFFFF" variant="Bold" />
                <Text className="text-white text-lg font-bold ml-2">
                  G·ª≠i
                </Text>
              </TouchableOpacity>
            </View>
          </View>

          {/* Section 3: Response Time */}
          <View className="mb-6">
            <Text className="text-gray-800 text-xl font-bold mb-4">
              3. Th·ªùi gian ph·∫£n h·ªìi
            </Text>
            
            <Text className="text-gray-700 text-base leading-6">
              Ch√∫ng t√¥i c·ªë g·∫Øng ph·∫£n h·ªìi t·∫•t c·∫£ c√°c y√™u c·∫ßu h·ªó tr·ª£ trong v√≤ng <Text className="font-bold">24-48 gi·ªù l√†m vi·ªác</Text>. ƒê·ªëi v·ªõi c√°c v·∫•n ƒë·ªÅ kh·∫©n c·∫•p, ch√∫ng t√¥i s·∫Ω ∆∞u ti√™n x·ª≠ l√Ω.
            </Text>
          </View>

          {/* Section 4: Updates */}
          <View className="mb-8">
            <Text className="text-gray-800 text-xl font-bold mb-4">
              4. C·∫≠p nh·∫≠t v√† th√¥ng b√°o
            </Text>
            
            <Text className="text-gray-700 text-base leading-6">
              ƒê·ªÉ nh·∫≠n ƒë∆∞·ª£c th√¥ng tin m·ªõi nh·∫•t v·ªÅ c√°c b·∫£n s·ª≠a l·ªói, c·∫≠p nh·∫≠t t√≠nh nƒÉng v√† th√¥ng b√°o quan tr·ªçng, h√£y ƒë·∫£m b·∫£o b·∫°n ƒë√£ b·∫≠t th√¥ng b√°o cho ·ª®ng d·ª•ng c·ªßa ch√∫ng t√¥i.
            </Text>
          </View>
        </ScrollView>
      </View>
    </ImageBackground>
  )
}

